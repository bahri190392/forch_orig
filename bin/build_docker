#!/bin/bash -e

FAUCET_REPO=https://github.com/grafnu/faucet.git
FAUCET_HASH=$(cat etc/FAUCET_VERSION)
ALL_IMAGES="forch/faux forch/faucet forch/gauge"
DOCKER_IMAGE_LIST=etc/docker_images.txt
docker_args=
mkdir -p build
pull=

if [ "$1" == push ]; then
    cat $DOCKER_IMAGE_LIST | while read image hash other; do
        echo Tagging $hash as $image:$hash and push to dockerhub...
        docker tag $hash $image:$hash
        docker push $image:$hash
    done
    echo Done with docker build push.
    exit 0
fi

if [ "$1" == pull ]; then
    cat $DOCKER_IMAGE_LIST | while read image hash other; do
        docker pull $image:$hash
        docker tag $hash $image:latest
    done
    echo Done with docker build pull.
    exit 0
fi

docker rmi -f $ALL_IMAGES || true
images=$(docker images | fgrep forch/ | fgrep latest | wc -l)
if [ $images != 0 ]; then
    echo Unexpected forch/ images found:
    docker images | fgrep forch/
    false
fi
rm -f $DOCKER_IMAGE_LIST

echo Building faux...
docker build -t forch/faux -f etc/Dockerfile.faux . > build/docker_faux.log &

if [ -d faucet ]; then
    echo Faucet already exists. Not cloning.
    faucet_ver=$(cd faucet; git rev-parse HEAD)
    if [ "$faucet_ver" != $FAUCET_HASH ]; then
        echo Local faucet version not as expected.
        echo $FAUCET_HASH from etc/FAUCET_VERSION
        echo $faucet_ver in faucet/
        false
    fi
else
    echo Cloning faucet locally...
    git clone $FAUCET_REPO faucet
    (cd faucet; git checkout $FAUCET_HASH)
fi

faucet_ver=$(cd faucet; git rev-parse HEAD)

docker_args+=--label=FAUCET=$faucet_ver

echo Building faucet and gauge...
docker build -t forch/faucet $docker_args -f etc/Dockerfile.faucet . > build/docker_faucet.log &
docker build -t forch/gauge $docker_args -f etc/Dockerfile.gauge . > build/docker_gauge.log &

echo Waiting for builds to complete.
wait

tail build/docker_*.log

images=$(docker images | fgrep forch/ | fgrep latest | wc -l)
if [ $images != 3 ]; then
    echo Did not find expected 3 forch images:
    docker images | fgrep forch/ | fgrep latest
    false
fi

echo Updating $DOCKER_IMAGE_LIST...
docker images | fgrep forch/ | fgrep latest | while read image tag hash other; do
    echo $image $hash `date` >> $DOCKER_IMAGE_LIST
done

echo Done with successful docker build.
